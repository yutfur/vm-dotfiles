# -------------------------------------------------------------------------------------------
# set-option(set), set-window-option(setw), bind-key(bind), unbind-key(unbind)、()内は左記のコマンドの省略形(エイリアス)
# -g...全セッションに対してグローバルな設定にするオプション(https://qiita.com/FrogWoman/items/f6797f2a70c44e42863d)
# -n tmuxのPrefixキーをタイプする必要がなくなるオプション(〃)
# -t コピーモードでのキーバインドを指定するオプション(〃)
# -------------------------------------------------------------------------------------------

# -------------------------------------------------------------------------------------------
# 基本設定
# -------------------------------------------------------------------------------------------

# ログインシェルをデフォルトで開く
# set -g default-shell "${SHELL}"
# set -g default-command "${SHELL}"
# bash をデフォルトで開く (zsh も可能)
# set -g default-shell /bin/bash
# set -g default-command /bin/bash

# マウスでウィンドウ(タブ)・ペインの切り替えやリサイズを可能にする
set -g mouse on

# Escキー押下後のキー入力までの遅延を解消
set -sg escape-time 0

# ウィンドウ(タブ)のコマンド履歴の最大行数
set -g history-limit 10000
# ウィンドウ(タブ)の番号の開始位置を指定(デフォルトは0、以下では1からに設定してある)
set -g base-index 1
# ペインの番号の開始位置を指定(デフォルトは0、以下では1からにしてある)
setw -g pane-base-index 1
# ウィンドウ(タブ)を閉じた時、ウインドウ番号を詰めて付番し直す
set -g renumber-windows on

# ステータスラインを更新する間隔を1秒にする(秒)
set -g status-interval 1
# ステータスライン上のメッセージの表示時間(ミリ秒、3000ミリ秒＝3秒)
set -g display-time 3000

# Neovim 推奨設定
set -g focus-events on

# 同時入力
# bind i setw synchronize-panes

# -------------------------------------------------------------------------------------------
# 外観設定
# -------------------------------------------------------------------------------------------

# 256色端末を使用する
# https://qiita.com/yami_beta/items/ef535d3458addd2e8fbb
set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

# ステータスラインをトップに配置する(bottomでボトムに配置できる)
set -g status-position top

# ウィンドウ(タブ)リストを中心に
set -g status-justify "centre"

# ステータスライン左側の最大の長さを指定する
set -g status-left-length 90
# ステータスライン左側に ホスト名｜Session:セッション名｜Windows:カレントウィンドウ番号｜Pane:カレントペイン番号 を表示する
set -g status-left "#H | Session:#S | Window:#I | Pane:#P"

# ステータスライン右側の最大の長さを指定する
set -g status-right-length 90
# ステータスライン右側に 年月日(曜日) 時刻 を表示する、また、プレフィックスキー有効時に右ステータスラインの背景色を反転する (https://qiita.com/dtan4/items/363e92525e7c5a16f3fc)
set -g status-right "#{?client_prefix,#[fg=black]#[bg=colour166],} [%Y/%m/%d(%a) %H:%M:%S]"

# ウィンドウ(タブ)リストの設定
setw -g window-status-style fg=default,bg=default,dim
# ウィンドウ(タブ)リスト上のアクティブなウィンドウの設定
setw -g window-status-current-style fg=colour166,bg=default,bold

# メッセージ表示時のステータスラインの設定
set -g message-style fg=black,bg=colour166

# コピーモードのときに、右上に出てくる表示の色
set -g mode-style fg=black,bg=colour166

# -------------------------------------------------------------------------------------------
# キーバインド設定関連 (最小限にする)
# < prefix + ? >で、設定済みのキーバインドと衝突しないか確認してから設定すること
# -------------------------------------------------------------------------------------------

# prefix キーを <C-s> にする (デフォルトの prefix キー <C-b> を無効化)
unbind C-b
set -g prefix C-s
# C-s*2でtmux内のプログラムにC-sを送る?
bind C-s send-prefix

# -r オプションによるキーリピートの待機時間を指定する(ミリ秒、デフォルトは500ミリ秒＝0.5秒)
set -g repeat-time 1500

# <prefix>r で設定ファイルをリロードする(refresh-client を上書き)
bind r source-file $HOME/.tmux.conf \; display-message "Reloaded $HOME/.tmux.conf"

# <prefix>/ でコピーモード外からテキスト検索
bind / copy-mode \; command-prompt -p "(search down)" "send -X search-forward \"%%%\""

# <prefix>t でウィンドウ(タブ)の作成 (clock-mode を上書き)
bind t new-window

# <prefix>Q でウィンドウ(タブ)を閉じる
bind Q confirm-before -p "kill-window #I:[#W]? (y/n)" kill-window

# <prefix>v でペインを垂直分割する(%での垂直分割を無効化)
bind v split-window -h
unbind %
# <prefix>s でペインを水平分割する("での水平分割を無効化)
bind s split-window -v
unbind '"'

# <prefix>P で各ペイン番号を表示して移動したいペイン番号を入力するとそのペインへ移動する
bind P display-panes
# このときのペイン番号の表示時間の設定(5000ミリ秒＝5秒で設定)
set -g display-panes-time 5000

# <prefix>h,j,k,l でペインを移動する(リピート可能、last-window を上書き)、或いは、<prefix>P を使っても良い(上記)
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# <prefix>H,J,K,L でペインをリサイズする
bind -r H resize-pane -L 1
bind -r J resize-pane -D 1
bind -r K resize-pane -U 1
bind -r L resize-pane -R 1

# <prefix>q でペインを閉じる ( display-panes を上書き、<prefix>P 上記参照)
bind q confirm-before -p "kill-pane #P? (y/n)" kill-pane

# コピーモード
# キー操作をviライクにする
setw -g mode-keys vi
# <prefix>V でコピーモードを開始する
bind V copy-mode \; display-message "Copy Mode"
# v で選択を始める
bind -T copy-mode-vi v send -X begin-selection
# V で行選択
bind -T copy-mode-vi V send -X select-line
# C-v で矩形選択
bind -T copy-mode-vi C-v send -X rectangle-toggle
# y でヤンク(コピー)
bind -T copy-mode-vi y send -X copy-selection
# C でヤンク(コピー)
# bind -T copy-mode-vi C send -X copy-selection
# <prefix>p でプット(previous-window を上書き)
# bind p paste-buffer

# -------------------------------------------------------------------------------------------
#  プラグイン
# -------------------------------------------------------------------------------------------

# https://github.com/tmux-plugins/tpm TPMやプラグインのインストール/アンインストールの仕方など
# <prefix>I でプラグインをインストールする
# <prefix>U でプラグインをアップデートする
# <prefix><alt-u> で $HOME/.tmux.conf から記述を削除したプラグインをアンインストールする

# TPM の自動インストール
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# プラグインマネージャ
set -g @plugin 'tmux-plugins/tpm'

# セッションの保存と復元 (https://github.com/tmux-plugins/tmux-resurrect)
# < prefix + C-s > でセッションの保存、< prefix + C-r > でセッションの復元
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-capture-pane-contents 'on'
# Neovimのセッションの保存＆復旧
set -g @resurrect-strategy-nvim 'session'
# mysql,ssh,phpのプロセスが保存＆復元対象になる
set -g @resurrect-processes 'mysql ssh php'

# tmux-resurrect を自動で実行 (https://github.com/tmux-plugins/tmux-continuum)
set -g @plugin 'tmux-plugins/tmux-continuum'
# tmux 起動時に最後に保存した環境(セッション)を自動で復元
set -g @continuum-restore 'on'
# セッションを自動保存する間隔の指定(分、デフォルトは15分、0で自動保存の無効化)
set -g @continuum-save-interval '1'

# コピーモードでヤンク(コピー)したテキストをシステムのクリップボードにコピー (https://github.com/tmux-plugins/tmux-yank)
set -g @plugin 'tmux-plugins/tmux-yank'

# 選択範囲のファイルやURLを開く (https://github.com/tmux-plugins/tmux-open)
# コピーモードでハイライトしてoを押すと選択部分をシステムのデフォルトプログラムで開く
set -g @plugin 'tmux-plugins/tmux-open'
# コピーモードでハイライトしてS(Shift-s)を押すと選択部分を検索エンジンで直接検索する(検索エンジンをデフォルトのgoogleからduckduckgoに変更)
set -g @open-S 'https://www.duckduckgo.com/?q='

# Initialize TMUX plugin manager (この行は .tmux.conf の一番下に置いておく)
run '$HOME/.tmux/plugins/tpm/tpm'
