# -----------
# プレビュー
# -----------

# ctpv を使う
set previewer ctpv
set cleaner ctpvclear
&ctpv -s $id
&ctpvquit $id

# -----------
# オプション
# -----------

# 各コラムに枠線を表示する
# 有効にすると選択状態が見えなくなる
# set drawbox true

# シェルコマンドの実行に zsh を使用する
set shell zsh

# デュアルペイン
set ratios 1:1

# 隠しファイルを表示する
set hidden true

# アイコンを表示する
set icons true

# インクリメンタルサーチフィルターを使って検索する
set incfilter true
map / filter

# ソートを降順にする
# set reverse true

# 名前でソートする
set sortby name
map sn :set sortby name;set info
map sN :set sortby natural;set info

# 最下行に表示されるファイル変更時刻のフォーマット文字列を年月日にする
set timefmt '2006 Jan_2 15:04:05'

# -------------
# キーバインド
# -------------

# ファイルの削除
map x delete

# マウスを使えるようにする
set mouse true
map <m-1> open
map <m-up> up
map <m-down> down

# 選択したファイルがシンボリックリンクの時、gL を押すと元のファイルの場所を開く
cmd follow_link %{{
  lf -remote "send ${id} select '$(readlink $f)'"
}}
map gL follow_link

# gY で選択したファイル・ディレクトリのパスをコピーする
cmd yank-dirname $dirname -- "$f" | head -c-1 | xclip -i -selection clipboard
cmd yank-path $printf '%s' "$fx" | xclip -i -selection clipboard
cmd yank-basename $basename -a -- $fx | head -c-1 | xclip -i -selection clipboard

cmd yank-basename-without-extension ${{
    echo "$fx" |
      xargs -r -d '\n' basename -a |
      awk -e '{
        for (i=length($0); i > 0; i--) {
          if (substr($0, i, 1) == ".") {
            if (i == 1) print $0
            else print substr($0, 0, i-1)

            break
          }
        }

        if (i == 0)
          print $0
      }' |
      if [ -n "$fs" ]; then cat; else tr -d '\n'; fi |
      xclip -i -selection clipboard
}}
map gY yank-path

# gF でディレクトリ内の全てのファイルを選択する(トグル)
cmd select-files ${{
    { echo "$fs"; find -L "$(pwd)" -mindepth 1 -maxdepth 1 -type f; } |
        if [ "$lf_hidden" = "false" ]; then
          # remove any hidden files so you only select files you can see.
          grep -v '/\.[^/]\+$'
        else
          cat
        fi |
        sed '/^$/d' | sort | uniq -u |
        xargs -d '\n' -r -I{} lf -remote "send $id toggle {}"
}}
map gF select-files

# gD でディレクトリ内の全てのディレクトリを選択する(トグル)
cmd select-dirs ${{
    { echo "$fs"; find -L "$(pwd)" -mindepth 1 -maxdepth 1 -type d; } |
        if [ "$lf_hidden" = "false" ]; then
          grep -v '/\.[^/]\+$'
        else
          cat
        fi |
        sed '/^$/d' | sort | uniq -u |
        xargs -d '\n' -r -I{} lf -remote "send $id toggle {}"
}}
map gD select-dirs

# gf で fzf でカレントディレクトリ以下のディレクトリを検索してジャンプする
cmd fzf_jump ${{
    res="$(find . -maxdepth 1 | fzf --reverse --header='Jump to location' | sed 's/\\/\\\\/g;s/"/\\"/g')"
    if [ -d "$res" ] ; then
        cmd="cd"
    elif [ -f "$res" ] ; then
        cmd="select"
    else
        exit 0
    fi
    lf -remote "send $id $cmd \"$res\""
}}
map gf :fzf_jump

# gs でカレントディレクトリ以下のファイルに対して ripgrep を使って全文検索して、その結果からファイルを選択する
cmd rg_search ${{
    res="$( \
        RG_PREFIX="rg --column --line-number --no-heading --color=always \
            --smart-case "
        FZF_DEFAULT_COMMAND="$RG_PREFIX ''" \
            fzf --bind "change:reload:$RG_PREFIX {q} || true" \
            --ansi --layout=reverse --header 'Search in files' \
            | cut -d':' -f1
    )"
    [ ! -z "$res" ] && lf -remote "send $id select \"$res\""
}}
map gr :rg_search
